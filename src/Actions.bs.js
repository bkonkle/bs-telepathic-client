// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict'

import * as Block from 'bs-platform/lib/es6/block.js'
import * as Curry from 'bs-platform/lib/es6/curry.js'
import * as Js_json from 'bs-platform/lib/es6/js_json.js'
import * as Js_option from 'bs-platform/lib/es6/js_option.js'
import * as Json_encode from 'bs-json/src/Json_encode.js'
import * as Js_primitive from 'bs-platform/lib/es6/js_primitive.js'
import * as Option$BsAbstract from 'bs-abstract/src/Option.bs.js'
import * as Function$BsAbstract from 'bs-abstract/src/Function.bs.js'

function get (param, param$1) {
  return Function$BsAbstract.flip(
    function (prim, prim$1) {
      return Js_primitive.undefined_to_opt(prim[prim$1])
    },
    param,
    param$1
  )
}

function key (action) {
  switch (action.tag | 0) {
    case 0:
      return 'MESSAGE_SEND'
    case 1:
      return 'MESSAGE_RECEIVE'
    case 2:
      return 'CLIENT_REGISTER'
  }
}

function payload (action) {
  switch (action.tag | 0) {
    case 0:
      return Json_encode.object_(
        /* :: */ [
          /* tuple */ ['linkId', action[0]],
          /* :: */ [
            /* tuple */ ['userName', action[1]],
            /* :: */ [/* tuple */ ['text', action[2]], /* [] */ 0],
          ],
        ]
      )
    case 1:
      return Json_encode.object_(
        /* :: */ [
          /* tuple */ ['userName', action[0]],
          /* :: */ [/* tuple */ ['text', action[1]], /* [] */ 0],
        ]
      )
    case 2:
      return Json_encode.object_(
        /* :: */ [/* tuple */ ['linkId', action[0]], /* [] */ 0]
      )
  }
}

function action (action$1) {
  return Json_encode.object_(
    /* :: */ [
      /* tuple */ ['key', key(action$1)],
      /* :: */ [/* tuple */ ['payload', payload(action$1)], /* [] */ 0],
    ]
  )
}

var Encode = /* module */ [/* payload */ payload, /* action */ action]

function payload$1 (payload$2, key) {
  switch (key) {
    case 'CLIENT_REGISTER':
      return Curry._2(
        Option$BsAbstract.Infix[/* <*> */ 5],
        /* Some */ [
          function (linkId) {
            return /* ClientRegister */ Block.__(2, [linkId])
          },
        ],
        Curry._2(
          Option$BsAbstract.Infix[/* >>= */ 0],
          get('linkId', payload$2),
          Js_json.decodeString
        )
      )
    case 'MESSAGE_RECEIVE':
      return Curry._2(
        Option$BsAbstract.Infix[/* <*> */ 5],
        Curry._2(
          Option$BsAbstract.Infix[/* <*> */ 5],
          /* Some */ [
            function (userName, text) {
              return /* MessageReceive */ Block.__(1, [userName, text])
            },
          ],
          Curry._2(
            Option$BsAbstract.Infix[/* >>= */ 0],
            get('userName', payload$2),
            Js_json.decodeString
          )
        ),
        Curry._2(
          Option$BsAbstract.Infix[/* >>= */ 0],
          get('text', payload$2),
          Js_json.decodeString
        )
      )
    case 'MESSAGE_SEND':
      return Curry._2(
        Option$BsAbstract.Infix[/* <*> */ 5],
        Curry._2(
          Option$BsAbstract.Infix[/* <*> */ 5],
          Curry._2(
            Option$BsAbstract.Infix[/* <*> */ 5],
            /* Some */ [
              function (linkId, userName, text) {
                return /* MessageSend */ Block.__(0, [linkId, userName, text])
              },
            ],
            Curry._2(
              Option$BsAbstract.Infix[/* >>= */ 0],
              get('linkId', payload$2),
              Js_json.decodeString
            )
          ),
          Curry._2(
            Option$BsAbstract.Infix[/* >>= */ 0],
            get('userName', payload$2),
            Js_json.decodeString
          )
        ),
        Curry._2(
          Option$BsAbstract.Infix[/* >>= */ 0],
          get('text', payload$2),
          Js_json.decodeString
        )
      )
    default:
      return /* None */ 0
  }
}

function action$1 (json) {
  var action$2 = Js_json.decodeObject(json)
  var partial_arg = Js_option.getWithDefault(
    {},
    Curry._2(
      Option$BsAbstract.Infix[/* >>= */ 0],
      Curry._2(Option$BsAbstract.Infix[/* >>= */ 0], action$2, function (param) {
        return get('payload', param)
      }),
      Js_json.decodeObject
    )
  )
  return Curry._2(
    Option$BsAbstract.Infix[/* >>= */ 0],
    Curry._2(
      Option$BsAbstract.Infix[/* >>= */ 0],
      Curry._2(Option$BsAbstract.Infix[/* >>= */ 0], action$2, function (param) {
        return get('key', param)
      }),
      Js_json.decodeString
    ),
    function (param) {
      return payload$1(partial_arg, param)
    }
  )
}

var Decode = /* module */ [/* payload */ payload$1, /* action */ action$1]

export {get, key, Encode, Decode}
/* Json_encode Not a pure module */
