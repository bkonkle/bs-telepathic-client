// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Js_exn      = require("bs-platform/lib/js/js_exn.js");
var Js_json     = require("bs-platform/lib/js/js_json.js");
var Js_option   = require("bs-platform/lib/js/js_option.js");
var Json_encode = require("bs-json/lib/js/src/Json_encode.js");

function key(action) {
  switch (action.tag | 0) {
    case 0 : 
        return "MESSAGE_SEND";
    case 1 : 
        return "MESSAGE_RECEIVE";
    case 2 : 
        return "CLIENT_REGISTER";
    
  }
}

function encode(action) {
  var tmp;
  switch (action.tag | 0) {
    case 0 : 
        tmp = Json_encode.object_(/* :: */[
              /* tuple */[
                "linkId",
                action[0]
              ],
              /* :: */[
                /* tuple */[
                  "userName",
                  action[1]
                ],
                /* :: */[
                  /* tuple */[
                    "text",
                    action[2]
                  ],
                  /* [] */0
                ]
              ]
            ]);
        break;
    case 1 : 
        tmp = Json_encode.object_(/* :: */[
              /* tuple */[
                "userName",
                action[0]
              ],
              /* :: */[
                /* tuple */[
                  "text",
                  action[1]
                ],
                /* [] */0
              ]
            ]);
        break;
    case 2 : 
        tmp = Json_encode.object_(/* :: */[
              /* tuple */[
                "linkId",
                action[0]
              ],
              /* [] */0
            ]);
        break;
    
  }
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "key",
                key(action)
              ],
              /* :: */[
                /* tuple */[
                  "payload",
                  tmp
                ],
                /* [] */0
              ]
            ]);
}

function decode(json) {
  var opt = Js_json.decodeObject(json);
  if (opt) {
    var dict = opt[0];
    var match = dict["key"];
    if (match !== undefined) {
      var match$1 = Js_json.decodeString(match);
      if (match$1) {
        switch (match$1[0]) {
          case "CLIENT_REGISTER" : 
              var match$2 = dict["payload"];
              if (match$2 !== undefined) {
                var linkId = Js_option.getExn(Js_json.decodeObject(match$2))["linkId"];
                if (linkId !== undefined) {
                  var match$3 = Js_json.decodeString(linkId);
                  if (match$3) {
                    return /* Some */[/* ClientRegister */Block.__(2, [match$3[0]])];
                  } else {
                    return /* None */0;
                  }
                } else {
                  return /* None */0;
                }
              } else {
                return /* None */0;
              }
              break;
          case "MESSAGE_RECEIVE" : 
              var match$4 = dict["payload"];
              if (match$4 !== undefined) {
                var userName = Js_option.getExn(Js_json.decodeObject(match$4))["userName"];
                if (userName !== undefined) {
                  var match$5 = Js_json.decodeString(userName);
                  if (match$5) {
                    var text = Js_option.getExn(Js_json.decodeObject(match$4))["text"];
                    if (text !== undefined) {
                      var match$6 = Js_json.decodeString(text);
                      if (match$6) {
                        return /* Some */[/* MessageReceive */Block.__(1, [
                                    match$5[0],
                                    match$6[0]
                                  ])];
                      } else {
                        return /* None */0;
                      }
                    } else {
                      return /* None */0;
                    }
                  } else {
                    return /* None */0;
                  }
                } else {
                  return /* None */0;
                }
              } else {
                return /* None */0;
              }
              break;
          case "MESSAGE_SEND" : 
              var match$7 = dict["payload"];
              if (match$7 !== undefined) {
                var userName$1 = Js_option.getExn(Js_json.decodeObject(match$7))["userName"];
                if (userName$1 !== undefined) {
                  var match$8 = Js_json.decodeString(userName$1);
                  if (match$8) {
                    var text$1 = Js_option.getExn(Js_json.decodeObject(match$7))["text"];
                    if (text$1 !== undefined) {
                      var match$9 = Js_json.decodeString(text$1);
                      if (match$9) {
                        var linkId$1 = Js_option.getExn(Js_json.decodeObject(match$7))["linkId"];
                        if (linkId$1 !== undefined) {
                          var match$10 = Js_json.decodeString(linkId$1);
                          if (match$10) {
                            return /* Some */[/* MessageSend */Block.__(0, [
                                        match$10[0],
                                        match$8[0],
                                        match$9[0]
                                      ])];
                          } else {
                            return /* None */0;
                          }
                        } else {
                          return /* None */0;
                        }
                      } else {
                        return /* None */0;
                      }
                    } else {
                      return /* None */0;
                    }
                  } else {
                    return /* None */0;
                  }
                } else {
                  return /* None */0;
                }
              } else {
                return /* None */0;
              }
              break;
          default:
            return /* None */0;
        }
      } else {
        return /* None */0;
      }
    } else {
      return /* None */0;
    }
  } else {
    return Js_exn.raiseError("Unable to parse action");
  }
}

exports.key    = key;
exports.encode = encode;
exports.decode = decode;
/* Json_encode Not a pure module */
