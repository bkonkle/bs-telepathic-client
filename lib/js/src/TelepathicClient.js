// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Block                = require("bs-platform/lib/js/block.js");
var Curry                = require("bs-platform/lib/js/curry.js");
var WebSockets           = require("bs-websockets/lib/js/src/webSockets.js");
var TitleCase            = require("title-case");
var Js_primitive         = require("bs-platform/lib/js/js_primitive.js");
var Js_null_undefined    = require("bs-platform/lib/js/js_null_undefined.js");
var TelepathicActions    = require("./TelepathicActions.js");
var ProjectNameGenerator = require("project-name-generator");

var Config = /* module */[/* keys : record */[/* client : record */[/* userName */"telepathic:userName"]]];

function chooseName() {
  return TitleCase(ProjectNameGenerator({
                  alliterative: /* true */1
                }).spaced);
}

function getName() {
  return Js_primitive.null_to_opt(localStorage.getItem(/* userName */"telepathic:userName"));
}

function updateName(name) {
  localStorage.setItem(/* userName */"telepathic:userName", name);
  return /* () */0;
}

function makeName() {
  var name = chooseName(/* () */0);
  updateName(name);
  return name;
}

function getOrCreateUserName() {
  var name = getName(/* () */0);
  if (name) {
    return name[0];
  } else {
    return makeName(/* () */0);
  }
}

function sendMessage(linkId, text, client) {
  var userName = getOrCreateUserName(/* () */0);
  var message = /* MessageSend */Block.__(0, [
      linkId,
      userName,
      text
    ]);
  client[/* ws */0].send(JSON.stringify(TelepathicActions.encode(message)));
  return /* () */0;
}

function register(client) {
  var message = /* ClientRegister */Block.__(2, [client[/* linkId */1]]);
  client[/* ws */0].send(JSON.stringify(TelepathicActions.encode(message)));
  return /* () */0;
}

function make($staropt$star, linkId, url) {
  var socket = $staropt$star ? $staropt$star[0] : /* None */0;
  return /* record */[
          /* ws */socket ? socket[0] : Curry._1(WebSockets.WebSocket[/* make */0], url),
          /* linkId */linkId
        ];
}

function make$1(options) {
  var client = make(/* None */0, options.linkId, options.url);
  return {
          makeName: (function () {
              return makeName(/* () */0);
            }),
          getName: (function () {
              return Js_null_undefined.from_opt(getName(/* () */0));
            }),
          updateName: updateName,
          getOrCreateUserName: (function () {
              return getOrCreateUserName(/* () */0);
            }),
          sendMessage: (function (text) {
              return sendMessage(client[/* linkId */1], text, client);
            })
        };
}

var ClientJs = /* module */[/* make */make$1];

var start = make$1;

exports.Config              = Config;
exports.chooseName          = chooseName;
exports.getName             = getName;
exports.updateName          = updateName;
exports.makeName            = makeName;
exports.getOrCreateUserName = getOrCreateUserName;
exports.sendMessage         = sendMessage;
exports.register            = register;
exports.make                = make;
exports.ClientJs            = ClientJs;
exports.start               = start;
/* title-case Not a pure module */
